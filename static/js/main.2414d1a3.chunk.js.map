{"version":3,"sources":["Context.js","components/VideoPlayer.jsx","components/Sidebar.jsx","components/Notifications.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","audio","Audio","ContextProvider","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","then","currentStream","current","srcObject","on","id","from","callerName","signal","play","loop","isReceivingCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","pause","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","root","display","marginTop","Sidebar","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","Button","color","startIcon","Assignment","fontSize","PhoneDisabled","onClick","Phone","Notifications","style","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2414d1a3.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\n// const socket = io('http://localhost:5000');\n// inicia contexto de socket.io\nconst socket = io('https://video-chat-app-sk.herokuapp.com');\n\nconst audio = new Audio('bell.mp3');\n\nfunction play() {\n  audio.play();\n  audio.loop = true;\n}\n\nfunction pause() {\n  audio.pause();\n}\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    // Primeiro, queremos permissão para usar o vídeo e o áudio da câmera e do microfone do usuário\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n        // imediatamente queremos preencher o iframe do vídeo com o src da nossa tela\n        myVideo.current.srcObject = currentStream;\n      });\n\n    // ouvir uma ação específica\n    socket.on('me', (id) => setMe(id));\n\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\n      play();\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\n    });\n  }, []);\n\n  const answerCall = () => {\n    pause();\n\n    setCallAccepted(true);\n\n    // pares de chamada de vídeo\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    // manipuladores de pares\n    peer.on('signal', (data) => {\n      socket.emit('answerCall', { signal: data, to: call.from });\n    });\n\n    peer.on('stream', (currentStream) => {\n      // fluxo de outra pessoa\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    // conexão atual é igual ao par atual\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    // iniciador: verdadeiro porque estamos chamando\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name,\n      });\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on('callAccepted', (signal) => {\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    // destruir a referência atual, ou seja, parar de receber entrada da câmera e do áudio do usuário\n    connectionRef.current.destroy();\n\n    window.location.reload();\n  };\n\n  return (\n    // Provedor dentro há valor que será globalmente acessível a todos os componentes\n    <SocketContext.Provider\n      value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        callUser,\n        leaveCall,\n        answerCall,\n      }}\n    >\n      {/* Todos os componentes que temos lá estarão dentro do Socket envolvidos nele */}\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };\n","import React, { useContext } from 'react';\nimport { Grid, Typography, Paper, makeStyles } from '@material-ui/core';\n\nimport { SocketContext } from '../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    width: '550px',\n    [theme.breakpoints.down('xs')]: {\n      width: '300px',\n    },\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  paper: {\n    padding: '10px',\n    border: '2px solid black',\n    margin: '10px',\n  },\n}));\n\nconst VideoPlayer = () => {\n  // fornece todos os dados do Context.js\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.gridContainer}>\n      {/* se tivermos um fluxo, nosso próprio vídeo */}\n      {stream && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>{name || 'Nome'}</Typography>\n            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n          </Grid>\n        </Paper>\n      )}\n      {/* se callAccepted e a chamada não terminou, vídeo do usuário */}\n      {callAccepted && !callEnded && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>{call.name || 'Nome'}</Typography>\n            <video playsInline ref={userVideo} autoPlay className={classes.video} />\n          </Grid>\n        </Paper>\n      )}\n    </Grid>\n  );\n};\n\nexport default VideoPlayer;\n","import React, { useState, useContext } from 'react';\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SocketContext } from '../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  gridContainer: {\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  container: {\n    width: '600px',\n    margin: '35px 0',\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '80%',\n    },\n  },\n  margin: {\n    marginTop: 20,\n  },\n  padding: {\n    padding: 20,\n  },\n  paper: {\n    padding: '10px 20px',\n    border: '2px solid black',\n  },\n}));\n\nconst Sidebar = ({ children }) => {\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <Paper elevation={10} className={classes.paper}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <Grid container className={classes.gridContainer}>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant=\"h6\">Info da Conta</Typography>\n              <TextField label=\"Nome\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n              <CopyToClipboard text={me} className={classes.margin}>\n                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\n                  Copiar sua ID\n                </Button>\n              </CopyToClipboard>\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant=\"h6\">Fazer Ligação</Typography>\n              <TextField label=\"ID a ser chamado\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n              {callAccepted && !callEnded ? (\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin}>\n                  Desligar\n                </Button>\n              ) : (\n                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\n                  Chamar\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n        {children}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport { SocketContext } from '../Context';\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n  return (\n    <>\n      {call.isReceivingCall && !callAccepted && (\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <h1>{call.name} está chamando:</h1>\n          <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n            Responder\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport { Typography, AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport VideoPlayer from './components/VideoPlayer';\nimport Sidebar from './components/Sidebar';\nimport Notifications from './components/Notifications';\n\n// styles\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 100px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '600px',\n    border: '2px solid black',\n\n    [theme.breakpoints.down('xs')]: {\n      width: '90%',\n    },\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography variant=\"h2\" align=\"center\">\n          Vídeo Chat\n        </Typography>\n      </AppBar>\n      <VideoPlayer />\n      <Sidebar>\n        <Notifications />\n      </Sidebar>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './Context';\n\nimport './styles.css';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}